import discord
import os
import random
from discord.ext import commands
import math
import datetime

client = discord.Client()
client = commands.Bot(command_prefix=['pmath', 'pt'])

sad = [
    "I am a failure",
    "i am failure",
    "i am a failure",
    "im a failure",
    "i'm failure",
    "i'm a failure",
    "I'm a failure",
    "I am a disgrace",
    "I am useless",
    "I am stupid",
    "I am an idiot",
    "I am dumb",
    "I am disappointing",
    "I am useless",
    "I am not smart",
    "I'm dumb",
    "I'm stupid",
    "i am disgrace",
    "i am a disgrace",
    "im a disgrace",
    "i'm disgrace",
    "i'm a disgrace",
    "i am idiot",
    "i am an idiot",
    "im an idiot",
    "i'm idiot",
    "i'm an idiot",
    "i am unsmart",
    "im unsmart",
    "i'm unsmart",
    "i am stupid",
    "i am a stupid",
    "im a stupid",
    "i'm stupid",
    "i'm a stupid",
    "i am dumb",
    "i am a dumb",
    "im a dumb",
    "i'm dumb",
    "i'm a dumb",
    "i am disappointing",
    "i am a dissappointing",
    "im a dissappointing",
    "i'm dissappointing",
    "i'm a dissappointing",
    "i am useless",
    "i am a useless",
    "im a useless",
    "i'm useless",
    "i'm a useless",
    "i am unintelligent",
    "i am a unintelligent",
    "im a unintelligent",
    "i'm unintelligent",
    "i'm a unintelligent",
    "i am not smart",
    "i am a not smart",
    "im a not smart",
    "i'm not smart",
    "i'm a not smart",
    "i am Failure",
    "i am a Failure",
    "im a Failure",
    "i'm Failure",
    "i'm a Failure",
    "i am Idiot",
    "i am a Idiot",
    "im a Idiot",
    "i'm Idiot",
    "i'm a Idiot",
    "i am Stupid",
    "i am a Stupid",
    "im a Stupid",
    "i'm Stupid",
    "i'm a Stupid",
    "i am Dumb",
    "i am a Dumb",
    "im a Dumb",
    "i'm Dumb",
    "i'm a Dumb",
    "i am Disappointing",
    "i am a Disappointing",
    "im a Disappointing",
    "i'm Disappointing",
    "i'm a Disappointing",
    "i am Useless",
    "i am a Useless",
    "im a Useless",
    "i'm Useless",
    "i'm a Useless",
    "i am Disgrace",
    "i am a Disgrace",
    "im a Disgrace",
    "i'm Disgrace",
    "i'm a Disgrace",
    "i am Unsmart",
    "i am a Unsmart",
    "im a Unsmart",
    "i'm Unsmart",
    "i'm a Unsmart",
    "I'm stupid",
    "i am Unintelligent",
    "i am a Unintelligent",
    "im a Unintelligent",
    "i'm Unintelligent",
    "i'm a Unintelligent",
    "i am Not smart",
    "I am Not smart",
    "i am a Not smart",
    "im a Not smart",
    "i'm Not smart",
    "i'm a Not smart",
]

encouraging_words = [
    "Aww! That is not true :(", "No, you are an amazing person :)",
    "Hopefully it gets better <(^-^<)",
    "You are a capable individual with great potential!",
    "Believe in yourself, you got this!",
    "Keep your head high! Eventually you will get there :)",
    "Don't give up! You got this!",
    "There is light at the end of the tunnel :)",
    "Sending good vibes and happy thoughts your way  <(^-^<)",
    "Believe in yourself! Because I for sure do :)"
    "Believe in yourself, you are amazing!"
]

hug_gif = [
    "https://c.tenor.com/nUrfyD_VmM8AAAAC/hug-cute.gif",
    "https://c.tenor.com/4XQiR1rkwIAAAAAC/ghost-hug-ghost-hugs.gif",
    "https://c.tenor.com/UKsNkAqj7YcAAAAC/hug.gif",
    "https://c.tenor.com/NGFif4dxa-EAAAAC/hug-hugs.gif",
    "https://c.tenor.com/GdJRGf60YN4AAAAC/hugs-sending-virtual-hugs.gif",
    "https://c.tenor.com/XQh-aF1wTUIAAAAC/ghosthug.gif",
    "https://c.tenor.com/Vx-Fmk3G7McAAAAM/cute.gif",
    "https://media2.giphy.com/media/9Y1LEFKsbbP4hrLgV3/giphy.gif?cid=790b76119eb6ba36ddfbe56bf3ca28b4c38ddc7f8c1cacef&rid=giphy.gif&ct=g",
    "https://c.tenor.com/8Jk1ueYnyYUAAAAC/hug.gif",
    "https://c.tenor.com/1T1B8HcWalQAAAAC/anime-hug.gif",
    "https://c.tenor.com/Ct4bdr2ZGeAAAAAC/teria-wang-kishuku-gakkou-no-juliet.gif",
    "https://c.tenor.com/ia_mkwn2dwYAAAAC/love.gif",
    "https://c.tenor.com/endJ8_rbXUYAAAAC/be-happy-love.gif",
    "https://c.tenor.com/XyMvYx1xcJAAAAAC/super-excited.gif"
]
coin_outcomes = [
    "Heads", "Tails", "Heads", "Tails", "Heads", "Tails", "Heads", "Tails",
    "Heads", "Tails", "Heads", "Tails", "Heads", "Tails", "Heads", "Tails",
    "Heads", "Tails", "Heads", "Tails", "Heads", "Tails", "Heads", "Tails",
    "Heads", "Tails", "Heads", "Tails", "Heads", "Tails", "Heads", "Tails"
]

dice_roll = [
    "You rolled a **1** :game_die:", "You rolled a **2** :game_die:",
    "You rolled a **3** :game_die:", "You rolled a **4** :game_die:",
    "You rolled a **5** :game_die:", "You rolled a **6** :game_die:"
]

cat_images = [
    "https://upload.wikimedia.org/wikipedia/commons/3/38/Adorable-animal-cat-20787.jpg",
    "https://images.rawpixel.com/image_1000/cHJpdmF0ZS9sci9pbWFnZXMvd2Vic2l0ZS8yMDIyLTA1L2ZyYW5pbWFsX2NhdF9raXR0ZW5fYnJpdGlzaC1pbWFnZS1reWJlYXlrNC5qcGc.jpg",
    "https://cc0.photo/wp-content/uploads/2016/10/Striped-cat-on-a-meadow-2048x1365.jpg",
    "https://c.pxhere.com/images/8d/1e/604c6eb3dca5d46f3854ae974ccf-1603569.jpg!d",
    "https://pixnio.com/free-images/2021/09/14/2021-09-14-08-25-52-1049x1350.jpg",
    "https://c.tenor.com/bK1qpWGyQKkAAAAd/kitty.gif",
    "https://c.tenor.com/1iAVPVejxSkAAAAd/cat-cats.gif",
    "https://cdn.pixabay.com/photo/2020/06/02/06/18/kitten-5249587_1280.jpg",
    "https://pixnio.com/free-images/2017/09/26/2017-09-26-09-57-33-1100x733.jpg",
    "https://i0.wp.com/pixahive.com/wp-content/uploads/2020/10/A-cute-cat-124534-pixahive.jpg?fit=1560%2C1040&ssl=1",
    "https://pixnio.com/free-images/2017/09/26/2017-09-26-09-59-07-1100x733.jpg",
    "https://pixnio.com/free-images/2017/09/26/2017-09-26-07-39-47-1100x733.jpg",
    "https://live.staticflickr.com/5698/23119711630_c3ffe739a0_b.jpg"
]

wyr_questions = [
    "Would you rather: Give up junk food for a month **or** Give up all forms of social media for a week?",
    "Would you rather: Be reborn as a cat **or** A dog?",
    "Would you rather: Be invisible **or** Be able to fly?",
    "Would you rather: Be rich but lonely **or** Be poor but have friends?",
    "Would you rather: Know how you die **or** Know when you die?",
    "Would you rather: Have a lot of distant friends **or** One really good and close friend?",
    "Would you rather: Cry each time something funny happens **or** Laugh each time something tragic /  sad happens?",
    "Would you rather: Be caught cheating in a relationship **or** Be caught cheating on a test?",
    "Would you rather: Have as much wealth as you wish but always remain sad **or** Live paycheck to paycheck but be happy?",
    "Would you rather: Never be able to speak again **or** Never be able to hear again?",
    "Would you rather: Be able to sleep 8 hours but only during day-time **or** Only be able to sleep for 1 hour during the night?",
    "Would you rather: Be able to go back in the past and fix a mistake **or** Be able to go back in the past and revive one dead person?",
    "Would you rather: Find the love of your life **or** Win a million dollars?",
    "Would you rather: Give up showering for a month **or** Give up all forms of social media for a month?",
    "Would you rather: Be a famous serial-killer **or** Be poor?",
    "Would you rather: Get a private island **or** A private jet?",
    "Would you rather: Be the fastest runner in the world **or** Have the highest vertical jump in the world?",
    "Would you rather: Be a famous athlete **or** A famous singer?",
    "Would you rather: Never be able to lie **or** Always be lied to?",
    "Would you rather: Give up being able to eat meat **or** Give up being able to eat vegetables?",
    "Would you rather: Live in the middle of the ocean or an year **or** Live in the middle of a dense forest for an year?",
    "Would you rather: Live in 45°C for one year **or** Live in -45°C for one year?"
    "Would you rather: "
]

random_facts = [
    "Sudan has more pyramids than any country in the world. :flag_sd:",
    "The bumblebee bat is the world’s smallest mammal. :bat:",
    "There are parts of Africa in all four hemispheres. :earth_africa:",
    "The Philippines consists of 7,641 islands. :flag_ph:",
    "Japan has one vending machine for every 40 people. :flag_jp:",
    "There’s only one letter that doesn’t appear in any U.S. state name, it is Q. :regional_indicator_q:",
    "A cow-bison hybrid is called a beefalo. :cow: :bison:",
    "Armadillo shells are bulletproof. :muscle:",
    "Some octopus species lay around 56,000 eggs at a time. :octopus:",
    "Blue whales eat up to half a million calories in one mouthful. :whale:",
    "The current American flag was designed by a high school student. :flag_us:",
    "No number before 1,000 contains the letter A. :1234:",
    "Giraffe tongues can be 20 inches long. :giraffe:",
    "Cats are believed to be the only mammals who don’t taste sweetness. :cat:",
    "Humans aren’t the only animals that dream, rats dream too. :rat:",
    "If the sun exploded right now, you wouldn't know about it for another eight minutes. :boom:",
    "Over 80 million bacteria can be exchanged in one kiss. :microbe:",
    "Australia is wider than the moon, while the moon as a diameter of 3400 km, Australia has a diameter of 4000 km. :flag_au:",
    "*face with tears of joy* is the most used emoji worldwide. :joy:",
    "A shrimp's heart is located in its head. :shrimp:",
    "Odontophobia is the fear of teeth (or the fear of anything related to dentistry in general). :tooth:",
    "Elephants are the only animal to have four forward-facing knees. :elephant:"
]

trivia_questions = [
    ":thinking: Who was the 28th U.S. president? (Answer: || Woodrow Wilson ||)",
    ":thinking: How many countries does the continent Africa comprise of? (Answer: || 54 ||)",
    ":thinking: Which is the largest country in the world by land area? (Answer: || Russia ||)",
    ":thinking: How many states does the United States of America comprise of? (Answer: || 50 ||) ",
    ":thinking: Which were the last two states to join the Union? (Answer: || Alaska and Hawaii ||)",
    ":thinking: Which country won the Men's Fifa World Cup 2018, and against whom? (Answer: || France won against Croatia ||) ",
    ":thinking: Which team (either one is fine) has won the most Men's NBA Championships? (Answer: || Boston Celtics and Los Angeles Lakers have both won 17 NBA Championships ||)",
    ":thinking: Who was the first person to step foot on the Moon? (Answer: || Neil Armstrong ||)",
    ":thinking: What is the area on the Moon known as where the first person stepped foot on? (Answer: || Sea of Tranquility ||)",
    ":thinking: In the state of Georgia, it’s illegal to eat what with a fork? (Answer: || Fried Chicken ||)",
    ":thinking: The name of which African animal means *river horse*? (Answer: || Hippopotamus ||)",
    ":thinking: Which country has won the most Men's ICC Cricket World Cup titles? (Answer: || Australia ||)",
    ":thinking: In which year did World War II start? Which year did it end in? (Answer: || Start: 1939, End: 1945 ||)",
    ":thinking: What is the capital of Norway? (Answer: || Oslo ||)",
    ":thinking: Which continent, based on land area, is the largest in the world? (Answer: || Asia ||)",
    ":thinking: Which state in the United States of America has the most electoral college votes? (Answer: || California, it has 55 electroal votes ||)",
    ":thinking: Which country is also known as the *land of the rising sun*? (Answer: || Japan ||)",
    ":thinking: How many points is a touchdown? (Answer: || 6 points ||)",
    ":thinking: How many terms did Benjamin Franklin serve as president? (Answer: || He was never a president ||)",
    ":thinking: Which team won the first ever NBA championship? (Answer: || Philadelphia Warriors in 1946 ||)",
    ":thinking: Which is the largest state in the United States of America based on land area? (Answer: || Alaska ||)",
    ":thinking: Which is the largest state in the United States of America based on land area? (Answer: || Rhode Island ||)",
    ":thinking: Who is on the 100 U.S. Dollar bill? (Answer: || Benjamin Franklin ||)",
    ":thinking: Who was the 1st President of the United States of America? (Answer: || George Washington ||)",
    ":thinking: Who was the 16th U.S. president and is on the $5 bill? (Answer: || Abraham Lincoln ||)",
    ":thinking: What is the more popular name for the portrait officially titled “La Gioconda,” painted in 1503? (Answer: || Mona Lisa ||)",
    ":thinking: What is the capital of India? (Answer: || New Dehli ||)",
    ":thinking: What is the capital of the United States of America? (Answer: || Washington, D.C. ||)",
    ":thinking: Which two countries have the longest shared international border? (Answer: || Canada and the U.S.A. ||)",
    ":thinking: What is the human body’s largest organ? (Answer: || Skin ||)",
    ":thinking: How many bones do sharks have? (Answer: || 0 bones ||)",
    ":thinking: What was the first country to give women the right to vote? (Answer: || New Zealand ||)",
    ":thinking: What river runs through Paris? (Answer: || The Seine ||)",
    ":thinking: Which is the longest river in the world? (Answer: || The Nile ||)",
    ":thinking: Mount Everest is the tallest mountain in the world, what is the second tallest mountain in the world? (Answer: || Mount K2 ||)",
    ":thinking: How many stars and stripes are in the U.S.A. flag? (Answer: || 50 stars & 13 stripes  ||)"
    ":thinking: ",
    ":thinking: What is the rarest blood type? (Answer: || AB Negative ||)",
    ":thinking: How many countries are in the European Union? (Answer: || 27 ||)",
    ":thinking: What does DNA stand for? (Answer: || Deoxyribonucleic Acid ||)",
    ":thinking: How many phases does the moon have? (Answer: || Eight ||)",
    ":thinking: How many hearts does an octopus have? (Answer: || Three ||)",
    ":thinking: Which two planets in our Solar System have no moons? (Answer: || Mercury and Venus ||)",
    ":thinking: What U.S. city has the nickname “Motown,” derived from ‘motor town’? (Answer: || Detroit ||)",
    ":thinking: Uranus and which other planet are nicknamed the “ice giants”? (Answer: || Neptune ||) ",
    ":thinking: How many centimeters are in 1 inch (Answer: || 2.54, however any value between 2.5 and 2.54 is acceptable ||)"
]


@client.event
async def on_ready():
    print('We have logged in as {0.user}'.format(client))
    await client.change_presence(activity=discord.Game(name="Type p;help"))


@client.event
async def on_message(message):
    await client.process_commands(message)
    if message.author == client.user:
        return
    msg = message.content
    author = message.author
    if message.content.startswith('hello'):
        await message.channel.send(
            f"""Hello {author.mention}! I Hope you have a great day!""")
        await message.add_reaction('\U0001F44B')
    if message.content.startswith('Hello'):
        await message.channel.send(
            f"""Hello {author.mention}! I Hope you have a great day!""")
        await message.add_reaction('\U0001F44B')
    if message.content.startswith('p;Hi'):
        await message.channel.send(
            f"""Hi {author.mention}! I Hope you have a great day!""")
        await message.add_reaction('\U0001F44B')
    if message.content.startswith('p;hi'):
        await message.channel.send(
            f"""Hi {author.mention}! I Hope you have a great day!""")
        await message.add_reaction('\U0001F44B')
    if message.content.startswith('Hey'):
        await message.channel.send(
            f"""Hey {author.mention}! I Hope you have a great day!""")
        await message.add_reaction('\U0001F44B')
    if message.content.startswith('hey'):
        await message.channel.send(
            f"""Hey {author.mention}! I Hope you have a great day!""")
        await message.add_reaction('\U0001F44B')
    if any(word in msg for word in sad):
        await message.channel.send(random.choice(encouraging_words))
    if message.content.startswith('p;kitty'):
        await message.channel.send('meow :cat:')
        await message.add_reaction('\U0001F431')
    if message.content.startswith('p;Kitty'):
        await message.add_reaction('\U0001F431')
        await message.channel.send('meow :cat:')
    if message.content.startswith('p;cat'):
        await message.add_reaction('\U0001F431')
        await message.channel.send('meow :cat:')
    if message.content.startswith('p;Cat'):
        await message.add_reaction('\U0001F431')
        await message.channel.send('meow :cat:')
    if message.content.startswith('bye'):
        await message.channel.send(
            f'''Bye {author.mention}! Hope you have a great rest of your day!'''
        )
        await message.add_reaction('\U0001F44B')
    if message.content.startswith('Bye'):
        await message.channel.send(
            f'''Bye {author.mention}! Hope you have a great rest of your day!'''
        )
        await message.add_reaction('\U0001F44B')
    if message.content.startswith('p;flip'):
        await message.channel.send(random.choice(coin_outcomes))
        await message.add_reaction('\U0001FA99')
    if message.content.startswith('p;Flip'):
        await message.channel.send(random.choice(coin_outcomes))
        await message.add_reaction('\U0001FA99')
    if message.content.startswith('p;roll'):
        await message.channel.send(random.choice(dice_roll))
    if message.content.startswith('p;Roll'):
        await message.channel.send(random.choice(dice_roll))
    if message.content.startswith('gn'):
        await message.add_reaction('\U0001F634')
        await message.channel.send('Good Night & sweet dreams! :sleeping:')
    if message.content.startswith('GN'):
        await message.add_reaction('\U0001F634')
        await message.channel.send('Good Night & sweet dreams! :sleeping:')
    if message.content.startswith('Gn'):
        await message.add_reaction('\U0001F634')
        await message.channel.send('Good Night & sweet dreams! :sleeping:')
    if message.content.startswith('Goodnight'):
        await message.add_reaction('\U0001F634')
        await message.channel.send('Good Night & sweet dreams! :sleeping:')
    if message.content.startswith('goodnight'):
        await message.add_reaction('\U0001F634')
        await message.channel.send('Good Night & sweet dreams! :sleeping:')
    if message.content.startswith('p;ping'):
        await message.channel.send(
            f'**:ping_pong: Bot latency**: {client.latency * 10000} ms')
    if message.content.startswith('good night'):
        await message.add_reaction('\U0001F634')
        await message.channel.send('Good Night & sweet dreams! :sleeping:')
    if message.content.startswith('Good night'):
        await message.add_reaction('\U0001F634')
        await message.channel.send('Good Night & sweet dreams! :sleeping:')
    if message.content.startswith('gm'):
        await message.add_reaction('\U0001F304')
        await message.channel.send(
            'Good Morning! Hope you have a great day :sunny:')
    if message.content.startswith('Gm'):
        await message.add_reaction('\U0001F304')
        await message.channel.send(
            'Good Morning! Hope you have a great day :sunny:')
    if message.content.startswith('Goodmorning'):
        await message.add_reaction('\U0001F304')
        await message.channel.send(
            'Good Morning! Hope you have a great day :sunny:')
    if message.content.startswith('Good morning'):
        await message.add_reaction('\U0001F304')
        await message.channel.send(
            'Good Morning! Hope you have a great day :sunny:')
    if message.content.startswith('goodmorning'):
        await message.add_reaction('\U0001F304')
        await message.channel.send(
            'Good Morning! Hope you have a great day :sunny:')
    if message.content.startswith('good morning'):
        await message.add_reaction('\U0001F304')
        await message.channel.send(
            'Good Morning! Hope you have a great day :sunny:')
    if message.content.startswith('p;wyr'):
        await message.channel.send(random.choice(wyr_questions))
    if message.content.startswith('p;fact'):
        await message.channel.send(random.choice(random_facts))
    if message.content.startswith('p;trivia'):
        await message.channel.send(random.choice(trivia_questions))
    if message.content.startswith('I appreciate pixel'):
        await message.channel.send('Aww! I appreciate you too :blush:')
    if message.content.startswith('i appreciate pixel'):
        await message.channel.send('Aww! I appreciate you too :blush:')
    if message.content.startswith('p;random cat'):
        embed = discord.Embed(title="Meow :cat:",
                              description="",
                              color=0x00FFFF)
        embed.set_image(url=random.choice(cat_images))
        await message.channel.send(embed=embed)
    if message.content.startswith('p;about'):
        await message.channel.send(
            'Hello there! My name is pixel and I am a Discord bot written in Python. I am full of random interesting stuff. Type ``p;help`` to get a list of commands! Meow :)'
        )
    if message.content.startswith('p;hug'):
        embed = discord.Embed(
            title="",
            description=f"""{author.mention} Here is a hug for you :)""",
            color=0xFF00FF)
        embed.set_image(url=random.choice(hug_gif))
        await message.channel.send(embed=embed)


      
    #individual commands stuff
    if message.content.startswith('p;info help'):
      embed = discord.Embed(title="__help__ :pencil:", description = '''
Use this command to get a list of commands with a brief description of their function.
                            
__**Syntax**__
p;help''', color=0x00FFFF)
      embed.set_footer(text="Thank you for using pixel :)", icon_url="https://cdn.discordapp.com/avatars/978663279926870046/b43a03b91e449bfeb318823d64c8b7fc.png?size=4096")
      embed.timestamp = datetime.datetime.utcnow()
      await message.channel.send(embed=embed)

    if message.content.startswith('p;info dm help'):
      embed = discord.Embed(title="__dm help__ :calling:", description = '''
Use this command to get a list of commands with a brief description of their function, sent to you in a direct message (DM)
                            
__**Syntax**__
p;dm help''', color=0x00FFFF)
      embed.set_footer(text="Thank you for using pixel :)", icon_url="https://cdn.discordapp.com/avatars/978663279926870046/b43a03b91e449bfeb318823d64c8b7fc.png?size=4096")
      embed.timestamp = datetime.datetime.utcnow()
      await message.channel.send(embed=embed)

    if message.content.startswith('p;info about'):
      embed = discord.Embed(title="__about__ :cat:", description='''
Give me a chance to tell you a little about me!

__**Syntax**__
p;about''', color=0x00FFFF)
      embed.set_footer(text="Thank you for using pixel :)", icon_url="https://cdn.discordapp.com/avatars/978663279926870046/b43a03b91e449bfeb318823d64c8b7fc.png?size=4096")
      embed.timestamp = datetime.datetime.utcnow()
      await message.channel.send(embed=embed)

    if message.content.startswith('p;info ping'):
      embed = discord.Embed(title="__ping__ :ping_pong:", description='''
Use this command to see the real-time latency (response time) of pixel.
                            
__**Syntax**__
p;ping''', color=0x00FFFF)
      embed.set_footer(text="Thank you for using pixel :)", icon_url="https://cdn.discordapp.com/avatars/978663279926870046/b43a03b91e449bfeb318823d64c8b7fc.png?size=4096")
      embed.timestamp = datetime.datetime.utcnow()
      await message.channel.send(embed=embed)

    if message.content.startswith('p;info hi'):
      embed = discord.Embed(title="__hi__ :wave:", description='''Say hi to me for a greeting in return :)
                            
__**Syntax**__
p;hi''', color=0x00FFFF)
      embed.set_footer(text="Thank you for using pixel :)", icon_url="https://cdn.discordapp.com/avatars/978663279926870046/b43a03b91e449bfeb318823d64c8b7fc.png?size=4096")
      embed.timestamp = datetime.datetime.utcnow()
      await message.channel.send(embed=embed)

    if message.content.startswith('p;info hug'):
      embed = discord.Embed(title="__hug__ :people_hugging:", description='''A hug from pixel for the user! Everyone deserves a hug, hope this makes your day better! :D
                            
__**Syntax**__
p;hug''', color=0x00FFFF)
      embed.set_footer(text="Thank you for using pixel :)", icon_url="https://cdn.discordapp.com/avatars/978663279926870046/b43a03b91e449bfeb318823d64c8b7fc.png?size=4096")
      embed.timestamp = datetime.datetime.utcnow()
      await message.channel.send(embed=embed)

    if message.content.startswith('p;info random cat'):
      embed = discord.Embed(title="__random cat__ :cat2:", description ='''Using this command sends a random cat image or GIF in the chat. Cats are awesome :3

__**Syntax**__
p;random cat
''', color=0x00FFFF)
      embed.set_footer(text="Thank you for using pixel :)", icon_url="https://cdn.discordapp.com/avatars/978663279926870046/b43a03b91e449bfeb318823d64c8b7fc.png?size=4096")
      embed.timestamp = datetime.datetime.utcnow()
      await message.channel.send(embed=embed)

    if message.content.startswith('p;info cat'):
      embed = discord.Embed(title="__cat__ :cat:", description='''Meow!

__**Syntax**__
p;cat''', color=0x00FFFF)
      embed.set_footer(text="Thank you for using pixel :)", icon_url="https://cdn.discordapp.com/avatars/978663279926870046/b43a03b91e449bfeb318823d64c8b7fc.png?size=4096")
      embed.timestamp = datetime.datetime.utcnow()
      await message.channel.send(embed=embed)

    if message.content.startswith('p;info kitty'):
      embed = discord.Embed(title="__kitty__ :cat:", description='''Meow!

__**Syntax**__
p;cat''', color=0x00FFFF)
      embed.set_footer(text="Thank you for using pixel :)", icon_url="https://cdn.discordapp.com/avatars/978663279926870046/b43a03b91e449bfeb318823d64c8b7fc.png?size=4096")
      embed.timestamp = datetime.datetime.utcnow()
      await message.channel.send(embed=embed)

    if message.content.startswith('p;info flip'):
      embed = discord.Embed(title="__flip__ :coin:", description='''Flips a fair 2-sided coin, and gives the output as heads or tails. So what is your call, heads or tails?

__**Syntax**__
p;flip''', color=0x00FFFF)
      embed.set_footer(text="Thank you for using pixel :)", icon_url="https://cdn.discordapp.com/avatars/978663279926870046/b43a03b91e449bfeb318823d64c8b7fc.png?size=4096")
      embed.timestamp = datetime.datetime.utcnow()
      await message.channel.send(embed=embed)  

    if message.content.startswith('p;info roll'):
      embed = discord.Embed(title="__roll__ :game_die:", description='''Rolls a fair 6-sided game dice and gives the output in the form of the numerical result of the dice roll. So what number do you think it is going to be?

__**Syntax**__
p;roll''', color=0x00FFFF)
      embed.set_footer(text="Thank you for using pixel :)", icon_url="https://cdn.discordapp.com/avatars/978663279926870046/b43a03b91e449bfeb318823d64c8b7fc.png?size=4096")
      embed.timestamp = datetime.datetime.utcnow()
      await message.channel.send(embed=embed) 

    if message.content.startswith('p;info pmathadd'):
      embed = discord.Embed(title="__mathadd__ :heavy_plus_sign:", description='''Followed by the function, the user must input two numeric values and pixel will give an output as the sum of the two values (ex. pmathadd 4 5 <-- this will result in pixel giving an output of 9, which is the sum of 4 and 5)

__**Syntax**__
pmathadd''', color=0x00FFFF)
      embed.set_footer(text="Thank you for using pixel :)", icon_url="https://cdn.discordapp.com/avatars/978663279926870046/b43a03b91e449bfeb318823d64c8b7fc.png?size=4096")
      embed.timestamp = datetime.datetime.utcnow()
      await message.channel.send(embed=embed)  

    if message.content.startswith('p;info fact'):
      embed = discord.Embed(title="__fact__ :books:", description='''Tells you a random fact, because who doesn't enjoy a random cool fact :)

__**Syntax**__
p;fact''', color=0x00FFFF)
      embed.set_footer(text="Thank you for using pixel :)", icon_url="https://cdn.discordapp.com/avatars/978663279926870046/b43a03b91e449bfeb318823d64c8b7fc.png?size=4096")
      embed.timestamp = datetime.datetime.utcnow()
      await message.channel.send(embed=embed)

      
#help
    if message.content.startswith('p;dm help'):
        await message.channel.send(
            f"""{author.mention} Commands list sent in DM! """)
        embed = discord.Embed(title="Commands :cat:",
                              description='''
__**About Me**:__
``p;help``: Gives a list of commands
``p;info <command>``: For more detailed information about the specific command (ex. p;help fact)
``p;dm help``: Sends a DM to the user with a list of commands  
``p;about``: Give me a chance to introduce myself!
``p;ping``: Shows the real time response time of pixel
                                 
__**Actions**:__
``p;hi``: Say hi to me! 
``p;hug``: Free hug for the user! Everyone deserves a hug :)
``p;random cat``: Sends a random cat image or GIF in the chat
``p;cat``: meow! 
``p;kitty``: meow!
``p;flip``: Flips a coin
``p;roll``: Rolls a 6-sided dice
``p;fact``: Tells you a random fact

__**Math**:__                                   
``pmathadd x y``: Adds the inputted values
``pmathsubstract x y``: Substracts the inputted values
``pmathmultiply x y``: Multiplies the inputted values
``pmathdivide x y``: Divides the inputted values
``pmathexp x y``: Raises the base (x) to an exponent (y)
``pmathfactorial x``: Finds the factorial of the value inputted
``pmathsqrt x``: Finds the square root of the value inputted        
``pmathlog x y``: Finds the logrithm of the inputted value (x) with respect to the inputted base (y)
                           
__**Games**:__
``p;wyr``: Asks a *would you rather* question
``p;tod``: Asks a random *Truth*  or *Dare* question
``p;trivia``: Asks a trivia question!
``p;dare``: Gives a dare
``p;truth``: Asks a question for you to answer, truthfully
``ptictactoe @player1 @player2``: This allows the two pinged users to play a game of TicTacToe! Type ``ptplace`` followed by an integer from 1 - 9 to mark your tile.''',
                              color=0xFFFF00)
        embed.timestamp = datetime.datetime.utcnow()
        embed.set_thumbnail(url="https://cdn.discordapp.com/emojis/740764365749485638.gif?size=128&quality=lossless")
        embed.set_footer(text="Thank you for using pixel :)", icon_url="https://cdn.discordapp.com/avatars/978663279926870046/b43a03b91e449bfeb318823d64c8b7fc.png?size=4096")
        await message.author.send(embed=embed)
    if message.content.startswith('p;help'):
        embed = discord.Embed(title="Commands :cat:",
                              description='''
__**About Me**:__
``p;help``: Gives a list of commands
``p;info <command>``: For more detailed information about the specific command (ex. p;help fact)
``p;dm help``: Sends a DM to the user with a list of commands  
``p;about``: Give me a chance to introduce myself!
``p;ping``: Shows the real time response time of pixel
                                 
__**Actions**:__
``p;hi``: Say hi to me! 
``p;hug``: Free hug for the user! Everyone deserves a hug :)
``p;random cat``: Sends a random cat image or GIF in the chat
``p;cat``: meow! 
``p;kitty``: meow!
``p;flip``: Flips a coin
``p;roll``: Rolls a 6-sided dice
``p;fact``: Tells you a random fact

__**Math**:__                                   
``pmathadd x y``: Adds the inputted values
``pmathsubstract x y``: Substracts the inputted values
``pmathmultiply x y``: Multiplies the inputted values
``pmathdivide x y``: Divides the inputted values
``pmathexp x y``: Raises the base (x) to an exponent (y)
``pmathfactorial x``: Finds the factorial of the value inputted
``pmathsqrt x``: Finds the square root of the value inputted        
``pmathlog x y``: Finds the logrithm of the inputted value (x) with respect to the inputted base (y)
                           
__**Games**:__
``p;wyr``: Asks a *would you rather* question
``p;tod``: Asks a random *Truth*  or *Dare* question
``p;trivia``: Asks a trivia question!
``p;dare``: Gives a dare
``p;truth``: Asks a question for you to answer, truthfully
``ptictactoe @player1 @player2``: This allows the two pinged users to play a game of TicTacToe! Type ``ptplace`` followed by an integer from 1 - 9 to mark your tile.''',
                              color=0xFFFF00)
        embed.timestamp = datetime.datetime.utcnow()
        embed.set_thumbnail(url="https://cdn.discordapp.com/emojis/740764365749485638.gif?size=128&quality=lossless")
        embed.set_footer(text="Thank you for using pixel :)", icon_url="https://cdn.discordapp.com/avatars/978663279926870046/b43a03b91e449bfeb318823d64c8b7fc.png?size=4096")
        await message.channel.send(embed=embed)


@client.command()
async def add(ctx, num1: int, num2: int):
    a = num1 + num2
    await ctx.send(f"**Result:** {a}")


@client.command()
async def substract(ctx, num1: int, num2: int):
    a = num1 - num2
    await ctx.send(f"**Result:** {a}")


@client.command()
async def multiply(ctx, num1: int, num2: int):
    a = num1 * num2
    await ctx.send(f"**Result:** {a}")


@client.command()
async def divide(ctx, num1: int, num2: int):
    a = num1 / num2
    await ctx.send(f"**Result:** {a}")


@client.command()
async def exp(ctx, num1: int, num2: int):
    a = num1**num2
    await ctx.send(f"**Result:** {a}")


@client.command()
async def sqrt(ctx, num1: int):
    a = num1**0.5
    await ctx.send(f"**Result:** {a}")


@client.command()
async def factorial(ctx, num1: int):
    a = math.factorial(num1)
    await ctx.send(f"**Result:** {a}")


@client.command()
async def log(ctx, num1: int, num2: int):
    a = math.log(num1, num2)
    await ctx.send(f"**Result:** {a}")

player1 = ""
player2 = ""
turn = ""
gameOver = True

board = []

winningConditions = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7],
                     [2, 5, 8], [0, 4, 8], [2, 4, 6]]


@client.command()
async def ictactoe(ctx, p1: discord.Member, p2: discord.Member):
    global count
    global player1
    global player2
    global turn
    global gameOver

    if gameOver:
        global board
        board = [
            ":white_large_square:", ":white_large_square:",
            ":white_large_square:", ":white_large_square:",
            ":white_large_square:", ":white_large_square:",
            ":white_large_square:", ":white_large_square:",
            ":white_large_square:"
        ]
        turn = ""
        gameOver = False
        count = 0

        player1 = p1
        player2 = p2
        line = ""
        for x in range(len(board)):
            if x == 2 or x == 5 or x == 8:
                line += " " + board[x]
                await ctx.send(line)
                line = ""
            else:
                line += " " + board[x]
        num = random.randint(1, 2)
        if num == 1:
            turn = player1
            await ctx.send("It is <@" + str(player1.id) + ">'s turn.")
        elif num == 2:
            turn = player2
            await ctx.send("It is <@" + str(player2.id) + ">'s turn.")
    else:
        await ctx.send(
            "A game is already in progress! Please finish it before starting a new one."
        )


@client.command()
async def place(ctx, pos: int):
    global turn
    global player1
    global player2
    global board
    global count
    global gameOver

    if not gameOver:
        mark = ""
        if turn == ctx.author:
            if turn == player1:
                mark = ":regional_indicator_x:"
            elif turn == player2:
                mark = ":o2:"
            if 0 < pos < 10 and board[pos - 1] == ":white_large_square:":
                board[pos - 1] = mark
                count += 1
                line = ""
                for x in range(len(board)):
                    if x == 2 or x == 5 or x == 8:
                        line += " " + board[x]
                        await ctx.send(line)
                        line = ""
                    else:
                        line += " " + board[x]

                checkWinner(winningConditions, mark)
                print(count)
                if gameOver == True:
                    await ctx.send(f"""**Result**: {mark} is the winner! :tada:""")
                elif count >= 9:
                    gameOver = True
                    await ctx.send("**Result**: It's a tie!")
                if turn == player1:
                    turn = player2
                elif turn == player2:
                    turn = player1
            else:
                await ctx.send("Please type ``ptictactoe @player1 @player2`` to start a game of TicTacToe. Type ``ptplace`` followed by an integer from 1 - 9 (inclusive) corresponding to the tile you want to mark. Make sure the tile hasn't already been marked and is empty. Good luck!")
        else:
            await ctx.send("It is not your turn yet.")
    else:
        await ctx.send("To start a new game of TicTacToe, type ``ptictactoe @player1 @player2``.")


def checkWinner(winningConditions, mark):
    global gameOver
    for condition in winningConditions:
        if board[condition[0]] == mark and board[
                condition[1]] == mark and board[condition[2]] == mark:
            gameOver = True


@ictactoe.error
async def tictactoe_error(ctx, error):
    print(error)
    if isinstance(error, commands.MissingRequiredArgument):
        await ctx.send("Please mention 2 players for this command.")
    elif isinstance(error, commands.BadArgument):
        await ctx.send("Please mention 2 players for this command.")


@place.error
async def place_error(ctx, error):
    if isinstance(error, commands.MissingRequiredArgument):
        await ctx.send("Please enter a position you would like to mark.")
    elif isinstance(error, commands.BadArgument):
        await ctx.send("Please make sure to enter an integer.")


client.run(os.environ['SECRET'])
